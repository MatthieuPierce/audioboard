{"version":3,"sources":["redux/constants.js","redux/actions.js","components/Pad.js","components/DrumMachine.js","App.js","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["PLAY","STOP","FETCH_JSON_REQUEST","FETCH_JSON_SUCCESS","FETCH_JSON_FAILURE","fetchJsonRequest","type","fetchPads","handleErrors","response","ok","Error","statusText","dispatch","fetch","headers","then","json","data","payload","fetchJsonSuccess","catch","error","fetchJsonFailure","Pad","props","handlePlay","setState","isPlaying","playPad","padId","audioRef","current","play","handleKeyDown","e","key","toUpperCase","handleAudioEnd","stopPad","state","bgColor","React","createRef","bind","document","addEventListener","this","removeEventListener","className","undefined","id","onClick","onKeyDown","style","padStyle","tabIndex","preload","ref","src","process","audioSrc","onEnded","onPause","Component","connect","ownProps","activePad","loading","pads","find","pad","DrumMachine","padElements","map","background","padHue","some","activeDescription","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","baseState","rootReducer","action","min","Math","ceil","max","floor","randomHue","random","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6a33acf1.chunk.js","sourcesContent":["export const PLAY = 'PLAY';\nexport const STOP = 'STOP';\nexport const FETCH_JSON_REQUEST = \"FETCH_JSON_REQUEST\";\nexport const FETCH_JSON_SUCCESS = \"FETCH_JSON_SUCCESS\";\nexport const FETCH_JSON_FAILURE = \"FETCH_JSON_FAILURE\";","import { PLAY, STOP, FETCH_JSON_REQUEST, FETCH_JSON_SUCCESS, FETCH_JSON_FAILURE } from './constants';\n\nexport const playPad = (padId) => {\n  return {\n    type: PLAY,\n    \"padId\": padId\n  }\n}\n\nexport const stopPad = (padId) => {\n  return {\n    type: STOP,\n    padId: padId\n  }\n}\n\nexport const fetchJsonRequest = () => {\n  return {\n    type: FETCH_JSON_REQUEST\n  }\n}\n\nexport const fetchJsonSuccess = (data) => {\n  return {\n    type: FETCH_JSON_SUCCESS,\n    payload: data\n  }\n}\n\nexport const fetchJsonFailure = (error) => {\n  return {\n    type: FETCH_JSON_FAILURE,\n    payload: error\n  }\n}\n\nexport const fetchPads = () => {\n  const handleErrors = response => {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response\n  }\n  return function(dispatch) {\n    dispatch(fetchJsonRequest);\n    fetch('pads.json', {\n      // method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n    .then(handleErrors)\n    .then(response => response.json())\n    .then(data => {\n      // console.log(`data in fetchPads prior to dispatch:`);\n      // console.log(data);\n      dispatch(fetchJsonSuccess(data));\n      return data;\n    })\n    .catch(error => dispatch(fetchJsonFailure(error)))\n  }\n}","import React from 'react';\nimport { playPad, stopPad } from '../redux/actions';\nimport { connect } from 'react-redux';\n// import KeyboardEventHandler from 'react-keyboard-event-handler';\nimport './Pad.css'\n\n\nclass Pad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      bgColor: ''\n    }\n    this.audioRef = React.createRef();\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleAudioEnd = this.handleAudioEnd.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillMount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handlePlay = () => {\n    // click console logging\n    // console.log(`played padId ${this.props.padId}`)\n\n    //inform local state isPlaying\n    this.setState({\n      isPlaying: true\n    })\n    // dispatch playPad action (to inform store/global state)\n    this.props.playPad(this.props.padId);\n\n    // actually play the audio\n    this.audioRef.current.play();\n  }\n\n  handleKeyDown = (e) => {\n\n    //uses event.key with document eventHandler, switch back to simply key if KeyboardEventHandler component is used instead\n    if (e.key.toUpperCase() === this.props.padId.toUpperCase()) {\n      this.handlePlay();\n    }\n  }\n\n  handleAudioEnd = () => {\n    //inform local state isPlaying to false\n    this.setState({\n      isPlaying: false\n    })\n    // dispatch stopPad action (to inform store/global state)\n    this.props.stopPad(this.props.padId);\n\n  }\n\n  render() {\n\n    const { padId } = this.props;\n\n    return (\n      <div\n        className={`drum-pad ${this.state.isPlaying ? \"playing\" : undefined}`}\n        id={padId}\n        onClick={this.handlePlay}\n        onKeyDown={this.handleKeyDown}\n        style={this.props.padStyle}\n        tabIndex=\"0\"\n      >\n        {/* <KeyboardEventHandler\n          handleKeys={[padId, `shift+${padId}`, padId.toUpperCase()]}\n          onKeyEvent={(key, e) => this.handleKeyDown(key)}\n        /> */}\n        <audio\n          className=\"clip\"\n          id={padId}\n          preload=\"auto\"\n          ref={this.audioRef}\n          src={process.env.PUBLIC_URL + this.props.audioSrc}\n          // src={this.props.audioSrc}\n          onEnded={this.handleAudioEnd}\n          onPause={this.handleAudioEnd}\n          tabIndex=\"0\"\n        >\n        </audio>\n        <header>\n          {padId}\n        </header>\n\n        {/* When I click on a .drum-pad element, the audio clip contained in its child audio element should be triggered */}\n\n        {/* When I press the trigger key associated with each .drum-pad, the audio clip contained in its child audio element should be triggered (e.g. pressing the Q key should trigger the drum pad which contains the string \"Q\", pressing the W key should trigger the drum pad which contains the string \"W\", etc.). */}\n\n        {/* When a .drum-pad is triggered, a string describing the associated audio clip is displayed as the inner text of the #display element (each string must be unique). */}\n\n        {/* PAD COMPONENTS REQS:  \n        * 9 clickable drum pad elements\n        * each with a class name of drum-pad\n        * a unique id that describes the audio clip the drum pad will be set up to trigger\n        * inner text that corresponds to one of the following keys on the keyboard: Q, W, E, A, S, D, Z, X, C. \n        * The drum pads MUST be in this order.\n      */}\n        {/* <p>I'm playing!</p>\n        <p>I'm not playing!</p> */}\n      </div>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    activePad: state.activePad,\n    loading: state.loading,\n    audioSrc: state.pads.find(pad => pad.padId === ownProps.padId).audioSrc\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    playPad: (padId) => dispatch(playPad(padId)),\n    stopPad: (padId) => dispatch(stopPad(padId))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pad);","import React from 'react';\nimport Pad from './Pad'\nimport { connect } from 'react-redux';\nimport { fetchPads } from '../redux/actions'\nimport './DrumMachine.css'\n\n\nclass DrumMachine extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    this.props.fetchPads();\n    // console.log(`pads after componentDidMount:`);\n    // console.log(this.props.pads)\n  }\n\n  render(){\n\n    const padElements = this.props.pads.map(pad => {\n      let padStyle = {\n        background: 'hsla(' + pad.padHue +', 65%, 45%, 1)'\n      };\n      return (\n      <Pad \n        padId={pad.padId} \n        key={pad.padId} \n        padStyle={padStyle}\n        />\n    )\n    });\n\n    return (\n      <div id=\"drum-machine-container\">\n        <div id=\"drum-machine\">\n          {/* BUILD OUT .drum-pad PAD COMPONENTS HERE:  \n            * 9 clickable drum pad elements\n            * each with a class name of drum-pad\n            * a unique id that describes the audio clip the drum pad will be set up to trigger\n            * inner text that corresponds to one of the following keys on the keyboard: Q, W, E, A, S, D, Z, X, C. \n            * The drum pads MUST be in this order.\n          */}\n\n          {/* for each pad in pads array, build Pad Component\n          supply each Pad with their own padId \n          AND supply audioSrc as props\n          (alternately, leave off audioSrc, and individual pad picks it up from Pad's individual mapStateToProps access to state.pads) */}\n          {padElements}\n\n          <div id=\"display\"\n            className={\n              (this.props.pads.some(pad => {\n                return pad.isPlaying === true\n              })) \n              ? \"bg-playing\"\n              : undefined\n            }\n          >\n          {(this.props.activeDescription)\n          ? this.props.activeDescription\n          : `Click or keyboard for hot takes from across the ages`\n        }\n          {/* String describing associated audio clip for currently-triggered pad */}\n          {/* When a .drum-pad is triggered, a string describing the associated audio clip is displayed as the inner text of the #display element (each string must be unique). */}\n        </div>\n        </div>        \n        \n        {/* <div>\n            <h2>\n              Pads Loaded: {this.props.padsLoaded}\n            </h2>\n            <h2>\n              Play Count: {this.props.playCount}\n            </h2>\n          </div> */}\n      </div>\n\n    )\n\n  }\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activePad: state.activePad,\n    activeDescription: state.activeDescription,\n    pads: state.pads,\n    loading: state.loading,\n    error: state.error,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPads: () => dispatch(fetchPads())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrumMachine);","import './App.css';\nimport DrumMachine from './components/DrumMachine';\n// import ReactFCCtest from 'react-fcctest';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Bad Takes Audioboard</h1>\n        {/* <p>Click or keyboard for hot takes from across the ages</p> */}\n      </header>\n      <DrumMachine />\n      {/* <ReactFCCtest /> */}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { PLAY, STOP, FETCH_JSON_REQUEST, FETCH_JSON_SUCCESS, FETCH_JSON_FAILURE } from './constants';\n\nconst baseState = {\n  // playCount: 0,\n  activePad: '',\n  activeDescription: '',\n  loading: false,\n  error: '',\n  pads: []\n}\n\n// const tempBaseState = {\n//   playCount: 0,\n//   activePad: '',\n//   activeDescription: '',\n//   loading: false,\n//   error: '',\n//   pads: [\n//     {\n//       \"padId\": \"Q\",\n//       \"audioSrc\": \"./audio/q-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"Q description:  It’s 1790 and If there’s one thing we don’t need here in the United States, it’s that newfangled metric system France just proposed.\"\n//     },\n//     {\n//       \"padId\": \"W\",\n//       \"audioSrc\": \"./audio/w-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"W description: It’s 1866 and if there’s one thing we don’t need here in the United States, it’s to make the metric system mandatory in this new Metric Act of 1866 we just passed.\"\n  \n//     },\n//     {\n//       \"padId\": \"E\",\n//       \"audioSrc\": \"./audio/e-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"E description: It’s 1902 and if there’s one thing we don’t need here in the United States, it’s that metric system our congressional committee of scientists just begged us to pass.\"\n  \n//     },\n//     {\n//       \"padId\": \"A\",\n//       \"audioSrc\": \"./audio/a-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"A description: It’s 1975 and if there’s one thing we don’t need here in the United States, it’s to give meaningful power to the Metric Conversion Act of 1975 we just passed.\"\n  \n//     },\n//     {\n//       \"padId\": \"S\",\n//       \"audioSrc\": \"./audio/s-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"S description: Now that we’ve inbred wolves until they fit down rabbit holes, I’m confident we’ll draw the line here.\"\n  \n//     },\n//     {\n//       \"padId\": \"D\",\n//       \"audioSrc\": \"./audio/d-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"D description: Anything can be an adult diaper if you have confidence.\"\n  \n//     },\n//     {\n//       \"padId\": \"Z\",\n//       \"audioSrc\": \"./audio/z-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"Z description: If everybody rode public transit, how would they learn to drive?\"\n  \n//     },\n//     {\n//       \"padId\": \"X\",\n//       \"audioSrc\": \"./audio/x-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"X description: if scratching makes it feel better, keep doing it!\"\n  \n//     },\n//     {\n//       \"padId\": \"C\",\n//       \"audioSrc\": \"./audio/c-audio.mp3\",\n//       \"isPlaying\": false,\n//       \"description\": \"Of course we should bring it inside the city gates-- never look a gift horse in the mouth!\"\n  \n//     }\n//   ]\n// }\n\n\nconst rootReducer = (state = baseState, action) => {\n  switch (action.type) {\n    case FETCH_JSON_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_JSON_SUCCESS:\n      // console.log(`FETCH_JSON_SUCCESS, action.payload is:`);\n      // console.log(action.payload);\n      return {\n        ...state,\n        pads: action.payload.map(pad => {\n          //assign random hue to each pad upon successful fetch\n          let min = Math.ceil(0);\n          let max = Math.floor(360);\n          let randomHue = Math.floor(Math.random() * (max - min + 1) + min);\n          // will also insert isPlaying: false state for all Pads\n          return {\n            ...pad,\n            padHue: randomHue,\n            isPlaying: false\n          }\n        }),\n        loading: false,\n        error: ''\n      }\n    case FETCH_JSON_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        pads: [],\n        error: action.payload\n      }\n    case PLAY:\n      // console.log(\"starting PLAY in rootReducer\");\n      // console.log(`prior to PLAY return, reducer thinks this is state.pads.find(pad => pad[\"padId\"] === action.padId) :: ${state.pads.find(pad => pad.padId == action.padId)}`)\n      // console.log(`state.pads: ${state.pads}`);\n      // console.log(`action.padId: ${action.padId}`);\n      // console.log(`state.pads.find: ${state.pads.find(pad => pad.padId === action.padId)}`);\n      return ({\n        ...state,\n        activePad: action.padId,\n        activeDescription: state.pads.find(pad => pad[\"padId\"] === action.padId)[\"description\"],\n        pads: state.pads.map(e => {\n          if (e.padId === action.padId) {\n            return {\n              ...e,\n              isPlaying: true\n            }\n          } else {\n            return e;\n          }\n        }\n        )\n      })\n    case STOP: \n     return ({\n       ...state,\n       pads: state.pads.map(e => {\n        if (e.padId === action.padId) {\n          return {\n            ...e,\n            isPlaying: false\n          }\n        } else {\n          return e;\n        }\n      }\n      )\n     })\n    default:\n      return state;\n  }\n\n}\n\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunkMiddleware from 'redux-thunk';\n\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store' ;\n\nReactDOM.render(\n  <React.StrictMode>\n    < Provider store={ store } >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}